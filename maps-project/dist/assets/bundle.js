/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components.js":
/*!***************************!*\
  !*** ./src/components.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryInterface\": () => (/* binding */ QueryInterface),\n/* harmony export */   \"QueryInterfaceContainer\": () => (/* binding */ QueryInterfaceContainer)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// import React from 'react';\nvar QueryInterfaceContainer = function QueryInterfaceContainer(_ref) {\n  var updateHeatmap = _ref.updateHeatmap;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showFilters = _React$useState2[0],\n      setShowFilters = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"query-interface-container\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowFilters(!showFilters);\n    }\n  }, !showFilters ? 'Show filter' : 'Hide filter'), showFilters && /*#__PURE__*/React.createElement(QueryInterface, {\n    updateHeatmap: updateHeatmap\n  }));\n}; // query form component\n\n\nvar QueryInterface = function QueryInterface(_ref2) {\n  var updateHeatmap = _ref2.updateHeatmap;\n  var today = new Date().toISOString().slice(0, 10);\n  var earliestRecordDate = \"2020-01-01\";\n\n  var _React$useState3 = React.useState(earliestRecordDate),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      startDate = _React$useState4[0],\n      setStartDate = _React$useState4[1];\n\n  var _React$useState5 = React.useState(today),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      endDate = _React$useState6[0],\n      setEndDate = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      dateSet = _React$useState8[0],\n      setDateSet = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"00:00\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      startTimeOfDay = _React$useState10[0],\n      setStartTimeOfDay = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"23:59\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      endTimeOfDay = _React$useState12[0],\n      setEndTimeOfDay = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      timeSet = _React$useState14[0],\n      setTimeSet = _React$useState14[1];\n\n  var _React$useState15 = React.useState(\"\"),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      keywordText = _React$useState16[0],\n      setKeywordText = _React$useState16[1]; // function that returns an array of keywords\n\n\n  var parseKeywordsText = function parseKeywordsText() {\n    var fullKeywordText = keywordText.toLowerCase(); // replace all 'exotic' whitespace characters with spaces\n\n    var whiteSpace = /(\\n|\\t|\\v|\\r|\\f)/g;\n    fullKeywordText = fullKeywordText.replaceAll(whiteSpace, \" \"); // replace all parenthesis, periods, commas, etc.\n\n    var punctuation = /[?.,\"'\\[\\]\\(\\)]/g;\n    fullKeywordText = fullKeywordText.replaceAll(punctuation, \" \"); // split text into an array of words and filter out any empty strings\n\n    return fullKeywordText.split(/[ ]+/).filter(function (x) {\n      return x !== '';\n    });\n  }; // function queries indexedDB data store with supplied inputs\n\n\n  var applyFilter = function applyFilter() {\n    var keywords = parseKeywordsText(keywordText);\n    updateHeatmap(startDate, endDate, startTimeOfDay, endTimeOfDay, keywords);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"query\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dateIn\"\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"arial\"\n  }, \"Date range filter\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"startDate\"\n  }, \"Start:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"startDate\",\n    value: startDate,\n    onChange: function onChange(e) {\n      setDateSet(true);\n      setStartDate(e.target.value);\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"endDate\"\n  }, \"End:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"endDate\",\n    value: endDate,\n    onChange: function onChange(e) {\n      setDateSet(true);\n      setEndDate(e.target.value);\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeIn\"\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"arial\"\n  }, \"Time of day filter\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"startTimeOfDat\"\n  }, \"Start time of day window:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    id: \"startTimeOfDay\",\n    value: startTimeOfDay,\n    onChange: function onChange(e) {\n      setTimeSet(true);\n      setStartTimeOfDay(e.target.value);\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"endTimeOfDay\"\n  }, \"End time of day window:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    id: \"endTimeOfDay\",\n    value: endTimeOfDay,\n    onChange: function onChange(e) {\n      setTimeSet(true);\n      setEndTimeOfDay(e.target.value);\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"keywordIn\"\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"arial\"\n  }, \"Crime description keywords\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"keyword\",\n    id: \"keyword\",\n    value: keywordText,\n    onChange: function onChange(e) {\n      return setKeywordText(e.target.value);\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Generate heatmap\",\n    onClick: function onClick() {\n      return applyFilter();\n    }\n  }));\n};\n\n\n\n//# sourceURL=webpack://Los-Angeles-Crime-Heatmap/./src/components.js?");

/***/ }),

/***/ "./src/datahandler.js":
/*!****************************!*\
  !*** ./src/datahandler.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getData\": () => (/* binding */ getData),\n/* harmony export */   \"insertData\": () => (/* binding */ insertData),\n/* harmony export */   \"withDB\": () => (/* binding */ withDB)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// Follows basic design pattern for access and use of IndexedDB.\n// Wrapper function that provides access to indexedDB.\n// It requests access to the window's database API, and with this request\n// provides the function defined by the parameter 'callback' with access to the db object.\n// With the db object the callback can do things like create object stores and request/perform \n// transactions on defined object stores.\nfunction withDB(callback) {\n  // TODO move database name and version number into the functions parameters\n  var request = window.indexedDB.open(\"lapd-crime-reports\", 2);\n  request.onerror = console.error;\n\n  request.onsuccess = function () {\n    var db = request.result;\n    console.log(\"withDB onsuccess: connection to db is opened.\");\n    callback(db);\n  }; // If no saved data is present on system, the database will have to be initialized.\n\n\n  request.onupgradeneeded = function () {\n    var db = request.result;\n    initDB(db, callback);\n  };\n}\n\nfunction initDB(db, callback) {\n  db.createObjectStore(\"lapd-crime-reports\", {\n    keyPath: \"dr_no\"\n  });\n  console.log(\"withDB onupgradeneeded: object store created\");\n  callback(db);\n}\n\nfunction insertData(dataArray) {\n  console.log(\"insertData called\");\n  withDB(function (db) {\n    console.log(\"insertData callback: \".concat(dataArray.length, \" records being added to DB\"));\n    var transaction = db.transaction([\"lapd-crime-reports\"], \"readwrite\");\n    transaction.onerror = console.error; // get object store from transaction\n\n    var store = transaction.objectStore(\"lapd-crime-reports\");\n    console.log(\"insertData callback: transaction opened and object store retrieved\"); // add data to the store\n\n    var _iterator = _createForOfIteratorHelper(dataArray),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var record = _step.value;\n        store.put(record);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    console.log(\"insertData callback: data placed into object store\");\n\n    transaction.oncomplete = function () {\n      console.log(\"data has been loaded into store\");\n    };\n  });\n}\nfunction getData(callback) {\n  console.log(\"getData called\");\n  withDB(function (db) {\n    console.log(\"getData callback\");\n    var transaction = db.transaction([\"lapd-crime-reports\"]);\n    transaction.onerror = console.error; // get object store from transaction\n\n    var store = transaction.objectStore(\"lapd-crime-reports\");\n    var storeRequest = store.getAll();\n\n    storeRequest.onsuccess = function (event) {\n      // console.log(`getData getAll `);\n      var data = _toConsumableArray(event.target.result);\n\n      console.log(\"getData getAll retrieved \".concat(event.target.result.length));\n      callback(data);\n    }; // on error display an alert to the user stating the data could not be loaded\n\n\n    storeRequest.onerror = function () {\n      alert(\"data records could not be loaded\");\n    };\n  });\n}\n\n//# sourceURL=webpack://Los-Angeles-Crime-Heatmap/./src/datahandler.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _datahandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datahandler */ \"./src/datahandler.js\");\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components */ \"./src/components.js\");\n\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar start = performance.now();\n\n // constants for data API-endpoints and google maps objects\n\nvar dataRecords = []; // current available data records loaded into memory\n\nvar dbName = \"lapd-crime-reports\";\nvar objStoreName = dbName;\nvar dbVersion = 2;\nvar requestURI = \"https://data.lacity.org/resource/2nrs-mtv8.json?\";\nvar heatmapRadius = 30; // radius for data-points rendered onto the heatmap layer\n// Code for directly interacting with the google maps application.\n// Interacts with the heatmap layer provided by google maps.\n// Accepts as input an array of objects with lat/lng data points.\n\nfunction drawHeatmap(data) {\n  console.log(\"drawing \".concat(data.length, \" records onto the heatmap layer\")); // console.log(data);\n\n  var heatmapData = data.map(function (dataPoint) {\n    return new google.maps.LatLng(dataPoint.lat, dataPoint.lon);\n  });\n  var heatmap = new google.maps.visualization.HeatmapLayer({\n    data: heatmapData,\n    radius: heatmapRadius\n  });\n  heatmap.setMap(map);\n  var end = performance.now();\n  console.log(\"duration: \".concat(end - start));\n} // React code importing and rendering our react component tree.\n// The components provide the filtering interface, the main functionality of this project.\n\n\nvar e = React.createElement;\nvar domContainer = document.querySelector('#react_container');\nconsole.log(e(_components__WEBPACK_IMPORTED_MODULE_1__.QueryInterfaceContainer));\nReactDOM.render(e(_components__WEBPACK_IMPORTED_MODULE_1__.QueryInterfaceContainer, {\n  updateHeatmap: updateHeatmap\n}), domContainer); // other DOM manipulation functions\n// pretty self-explanatory\n\nfunction setDataRecordsIndicator(recordsCount) {\n  var dataRecordsTextElement = document.querySelector(\"#data-records-loaded\");\n  dataRecordsTextElement.textContent = \"Data records loaded: \".concat(recordsCount);\n}\n\nfunction displayLoadingIndicator(loadingMessage) {\n  var backgroundElement = document.querySelector(\"#loading-indicator-background\");\n  var indicatorElement = document.querySelector(\"#loading-indicator-wrapper\");\n  var indicatorTextElement = document.querySelector(\"#loading-indicator-message\");\n  indicatorTextElement.textContent = loadingMessage;\n  backgroundElement.style.display = 'block';\n  indicatorElement.style.display = 'block';\n}\n\nfunction hideLoadingIndicator() {\n  var backgroundElement = document.querySelector(\"#loading-indicator-background\");\n  var indicatorElement = document.querySelector(\"#loading-indicator-wrapper\");\n  backgroundElement.style.display = 'none';\n  indicatorElement.style.display = 'none';\n} // Auxiliary function\n\n\nfunction addTimestamp() {\n  var today = Date.now(); // TODO, lets get a datestring, or figure out how to update only if 24 hours have elapsed\n\n  localStorage.setItem('data-loaded', today.toString());\n} // Data handling code\n\n\nsetupPage(); // Retrieve necessary data on page load:\n// First check if we have entered a last saved date in the localStorage,\n// if not, we will need to request the data before making the page available,\n// otherwise go ahead retrieve data from IndexedDB and populate dataRecords array.\n\nfunction setupPage() {\n  console.log(\"enter setuppage\");\n  var lastTimestamp = localStorage.getItem('data-loaded'); // if a timestamp is present then update DB in background, otherwise \n  // let the user know they will need to wait for the data to arrive.\n\n  if (lastTimestamp !== null && false) {} else {\n    console.log(\"no timestamp present, calling fetchData\"); // Fetch data from remote server, data will be loaded into the 'dataRecords' array\n\n    fetchData();\n  }\n} // end setuppage function\n\n\nfunction fetchData() {\n  // display message instructing user that the data is being loaded\n  displayLoadingIndicator(\"Please wait while we retrieve data from the server. This may take several moments due to large volume of data.\"); // fetch the data and save it to the global array\n\n  var max_records = 500000;\n  var targeturi = \"https://data.lacity.org/resource/2nrs-mtv8.json?$limit=\".concat(max_records);\n  fetch(targeturi, {\n    headers: {\n      'X-App-Token': 'ZbilE0vJrYP3CGv9L3kkUtohk'\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (records) {\n    dataRecords = _toConsumableArray(records);\n    setDataRecordsIndicator(dataRecords.length);\n    drawHeatmap(dataRecords);\n    hideLoadingIndicator(); // save data to indexDB\n\n    console.log(\"calling insertData from fetchData\");\n    (0,_datahandler__WEBPACK_IMPORTED_MODULE_0__.insertData)(records);\n    addTimestamp();\n  })[\"catch\"](function (e) {\n    alert(\"data records could not be retrieved from server due to an error\");\n    hideLoadingIndicator();\n  });\n}\n\nfunction updateHeatmap(dateStart, dateEnd, timeStart, timeEnd, keywords) {\n  console.log(\"enter updateHeatmap updated\"); // filter on date, time\n\n  var filteredRecords = dataRecords.filter(function (record) {\n    return record.date_occ >= dateStart && record.date_occ <= dateEnd;\n  }); // filter on time\n\n  var overnight = timeEnd < timeStart ? true : false;\n  if (!overnight) filteredRecords = filteredRecords.filter(function (value) {\n    return value.time_occ >= timeStart && value.time_occ <= timeEnd;\n  });else filteredRecords = filteredRecords.filter(function (value) {\n    return value.time_occ >= timeEnd || value.time_occ <= timeStart;\n  }); // filter for keywords\n\n  if (keywords.length > 0) filteredRecords = filteredRecords.filter(function (value) {\n    return keywords.includes(value.crm_cd_desc.toLowerCase());\n  }); // TODO implement a more lenient text search\n\n  console.log(keywords); // call drawHeatMap with remaining records\n\n  drawHeatmap(filteredRecords);\n}\n\n//# sourceURL=webpack://Los-Angeles-Crime-Heatmap/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;