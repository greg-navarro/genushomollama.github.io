{"componentChunkName":"component---src-pages-software-engineering-mdx-slug-js","path":"/software-engineering/ephemeral-chat-app/","result":{"data":{"mdx":{"frontmatter":{"title":"Ephemeral Chat App"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Ephemeral Chat App\",\n  \"subtitle\": \"A full stack web application capable of connecting an arbitrary number of users through a real time chat room.\",\n  \"link\": \"http://www.gregnavarro.com/maps-project/\",\n  \"image\": \"./demo.gif\",\n  \"image_alt\": \"Users exchange message in the chat app.\",\n  \"type\": \"project\",\n  \"project_type\": \"web development, software engineering\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    className: \"subtitle\"\n  }, \"A full stack web application comprising a back end server and a web browser client capable of connecting an arbitrary number of users through a real time chat room.\"), mdx(\"div\", {\n    className: \"media-container\"\n  }, mdx(\"div\", {\n    className: \"media\"\n  }, mdx(\"video\", {\n    src: \"https://gregnavarros3buckets.s3.us-west-1.amazonaws.com/demos/ephemeral-chat-app-1.mov\",\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    loop: true\n  })), mdx(\"h4\", {\n    className: \"media-description\"\n  }, \"A sample chat session.\")), mdx(\"div\", {\n    className: \"description\"\n  }, mdx(\"h3\", null, \"About\"), mdx(\"p\", null, \"The Ephemeral Chat App is a simple web app that can connect as many users as can be subscribed to a single server via an open HTTP connection.\"), mdx(\"br\", null), mdx(\"p\", null, \"This project is optimized through implementation of the Server Sent Events api, which uses a 'kept-alive' HTTP connection to reduce unnecessary network traffic and improve client response times through adoption of a simplex (as opposed to full-duplex) model.\"), mdx(\"h3\", null, \"Topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Networking & Asynchronous Programming\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server Sent Events\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cross-origin Networking\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"React.js\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"81436254-aa9c-5a3d-a3c8-1789748c54c7","slug":"ephemeral-chat-app/","__params":{"slug":"ephemeral-chat-app"}}},"staticQueryHashes":["3159585216"]}