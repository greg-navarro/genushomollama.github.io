{"version":3,"file":"component---src-pages-misc-index-js-b7d8ea608f0de4009862.js","mappings":"qJAAA,IAAMA,EAAS,CAAC,UAAW,UAAW,UAAW,WAE1C,SAASC,IAMZ,OALqBD,EACpBE,KAAI,SAAAC,GAAK,MAAK,CAAEA,MAAAA,EAAOC,KAAMC,KAAKC,aAClCF,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEH,KAAOI,EAAEJ,QAC1BF,KAAI,qBAAGC,W,kFCoDZ,UAnDwB,SAAC,GAAc,IAAZM,EAAW,EAAXA,KACzBC,EAAAA,WAAgB,WACTC,SAASC,cAAc,2BAC1BC,EAAAA,EAAAA,QAGJ,IAAMC,GAAcb,EAAAA,EAAAA,KAEpB,OACE,gBAAC,IAAD,CAAQc,UAAU,iBAChB,gBAAC,KAAD,CAAMC,GAAG,OACP,0BAAQC,UAAU,eAClB,uBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,MAAM,mBAAmBC,QAAQ,aAClH,wBAAM,YAAU,UAAUC,EAAE,qJAI/Bf,EAAKgB,OAAOC,MAAMxB,KAAI,SAACyB,EAAMC,GAAP,OACrB,2BAASX,UAAU,OAAOY,IAAKF,EAAKG,GAAIC,MAAO,CAAEC,gBAAiBlB,EAAYc,EAAEd,EAAYmB,UAC1F,gBAAC,KAAD,CAAMjB,GAAE,SAAWW,EAAKO,MACtB,2BACE,0BAAKP,EAAKQ,YAAYC,OACtB,yBAAIT,EAAKQ,YAAYE,gBAK5B5B,EAAKgB,OAAOC,MAAMO,OAAS,GAC1B,qBAAGhB,UAAU,qBAAb","sources":["webpack://my-gatsby-site/./src/color-picker.js","webpack://my-gatsby-site/./src/pages/misc/index.js"],"sourcesContent":["const colors = [\"#01FFc3\", \"#74ee15\", \"#FFB3FD\", \"#9D72FF\"]\n\nexport function colorSchemeArray() {\n    let shuffledColors = colors\n    .map(value => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value)\n\n    return shuffledColors\n}\n\nexport function getRandomColorFromScheme() {\n    const randomColorIndex = Math.floor(Math.random() * 100) % colors.length\n    return colors[randomColorIndex]\n}","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\nimport { startBasicScene } from '../../basic_scene';\nimport { colorSchemeArray, getRandomColorFromScheme } from '../../color-picker'\nimport '../styles.css'\n\nconst MiscProjectPage = ({ data }) => {\n  React.useEffect(() => {\n    if (!document.querySelector('.background-animation'))\n      startBasicScene()\n  })\n\n  const colorScheme = colorSchemeArray()\n\n  return (\n    <Layout pageTitle=\"Misc Projects\">\n      <Link to=\"../\">\n        <button className=\"back-button\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"/>\n        </svg>\n        </button>\n      </Link>\n      {data.allMdx.nodes.map((node, i) => (\n        <article className=\"item\" key={node.id} style={{ backgroundColor: colorScheme[i%colorScheme.length] }}>\n          <Link to={`/misc/${node.slug}`}>\n            <div>\n              <h2>{node.frontmatter.title}</h2>\n              <p>{node.frontmatter.subtitle}</p>\n            </div>\n          </Link>\n        </article>\n      ))}\n      {data.allMdx.nodes.length < 1 && (\n        <p className=\"no-items-messages\">No items at this time.</p>\n      )}\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMdx(filter: { frontmatter: { project_type: { glob: \"misc\" } } }) \n    {\n      nodes {\n        frontmatter {\n          title\n          subtitle\n        }\n        id\n        slug\n        body\n      }\n    }\n  }\n`;\n\nexport default MiscProjectPage;"],"names":["colors","colorSchemeArray","map","value","sort","Math","random","a","b","data","React","document","querySelector","startBasicScene","colorScheme","pageTitle","to","className","xmlns","width","height","fill","class","viewBox","d","allMdx","nodes","node","i","key","id","style","backgroundColor","length","slug","frontmatter","title","subtitle"],"sourceRoot":""}